x<- 4L
class()
class(x)
x <- c(4, "a", TRUE)
cclass(c)
class(c)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x==4] > 10
x
x[x . 10] <- 4
x[x > 10] <- 4
x
hw1_data <- read.csv("~/Desktop/Coursera/hw1_data.csv")
View(hw1_data)
head(data, num=2L)
df[1:2]
print(dataset [1:2, ])
print(hw1_data [1:2, ])
nrow(hw1_data)
n <- nrow(hw1_data)
print(hw1_data [(n-6+1) :n, ])
> print(hw1_data [(n-2+1) :n, ])
print(hw1_data [(n-2+1) :n, ])
print(hw1_data [47, ])
miss <- is.na(dataset[, "Ozone"]
sum(miss)
miss <- is.na(hw1_data[, "Ozone"]
sum(miss)
miss <- is.na(hw1_data[, "Ozone"])
sum(miss)
mean("Ozone")
mean(hw1_data[, "Ozone"], na.rm = TRUE)
subset(hw1_data, Ozone > 31 & Temp > 90)
mean(subset[[Solar.R]])
mean(subset[["Solar.R"]])
mean(subset[, "Solar.R"])
subset(hw1_data, Ozone > 31 & Temp > 90)
mean(subset[, "Solar.R"])
mean(hw1_data [Temp, month == 6])
subset(hw1_data, Month == 5)
mean(temp, )
mean(, Temp)
mean([["Temp"]])
mean(df[["temp"]])
mean(df[["Temp"]])
newdata <- subset(hw1_data, month == 5)
newdata <- subset(hw1_data, Month == 5)
mean(newdata[[Temp]])
mean
mean(newdata[["Temp"]])
View(newdata)
View(newdata)
View(newdata)
newdata <- subset(hw1_data, Month == 6)
mean(newdata[["Temp"]])
newdata <- subset(hw1_data, month == 5)
newdata <- subset(hw1_data, Month == 5)
max(newdata[["Ozone"]])
max(newdata[["Ozone"]], na.rm = TRUE)
x <- list(2, "a", "b", TRUE)
x[[2]]
install.packages("KernSmooth")
library(KernSmooth)
cube <- function(x, n) {x^3}
cube(3)
x <- 1:10
if(x > 5) {
x <-0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 1:10
if(x > 5) {
x <- 0
}
pollutantmean <- (x, y, 1:332) {
x <- specdata
}
pollutantmean <- function(dirctory, pollutant, id = 1:332) {
directory <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(print(mean(data,na.rm=TRUE),digits=4))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(print(mean(data,na.rm=TRUE),digits=4))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE))
}
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE))
}
pollutantmean("specdata", "sulfate", 1:10)
return(mean(data,na.rm=TRUE,digits=4))
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE,digits=4))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
can
end
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE,digits=4))
}
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE,digits=4))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE), digits=4)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(print(mean(data,na.rm=TRUE),digits=4))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit(pollutantmean.r)
setwd(/Users/matthew_dorst/Desktop/Coursera)
subnit()
submit()
setwd(/Users/matthew_dorst/Desktop/Coursera)
getwd
getwd()
getwd()
setwd("/Users/matthew_dorst/Desktop/Coursera")
submit()
2
submit()
submit()
submit()
complete <- function(directory, id = 1:332) {
directory <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
nobs = numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
nobs=c(nobs,sum(complete.cases(newRead)))
}
return(data.frame(id,nobs))
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
directory <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
nobs = numeric()
for(i in id)
{newRead=read.csv(paste(complete,formatC(i,width=3,flag="0"),".csv",sep=""))
nobs=c(nobs,sum(complete.cases(newRead)))
}
return(data.frame(id,nobs))
}
complete("specdata", 1)
complete <- function(specdata, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
nobs = numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
nobs=c(nobs,sum(complete.cases(newRead)))
}
return(data.frame(id,nobs))
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
submit()
submit()
submit()
?corr
??corr
corr <- function(specdata, threshold = 0) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data = numeric()
for (i in ids) {
newRead = read.csv(paste(specdata, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(specdata, threshold = 0) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data = numeric()
for (i in id) {
newRead = read.csv(paste(specdata, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(specdata, threshold = 0) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
df = complete(specdata)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(specdata, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(specdata, threshold = 0) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
df = complete(specdata)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(specdata, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return((corrr), digits = 5)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(specdata, threshold = 0) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
df = complete(specdata)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(specdata, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return((corrr),digits=5)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(specdata, threshold = 0) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
df = complete(specdata)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(specdata, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
cr <- corr("specdata", 150)
head(cr)
submit()
submit()
submit()
library(datasets)
data("iris")
?iris
iris
?iris
?iris
mean(x, y)
mean(iris$Sepal.Length [iris$Species=="virginica"],na.rm = TRUE)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data("mtcars")
?mtcars
mean(mtcars$mpg, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$hp, mtcars$cyl, mean)
debug(ls)
ls
getwd()
ls
ls
git push https://github.com/mattd1988/ProgrammingAssignment2.git
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome[, 11] <- as.numeric(outcome[, 11])
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
heart.att.dth <- as.numeric(outcome[, 11])
heart.fail.dth <- as.numeric(outcome[, 17])
pneum.dth <- as.numeric(outcome[, 23])
outcome()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
getwd()
ls
setwd("~/Desktop/Coursera/rprog-data-ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
best <- function(state, outcome) {
## Read the outcome data
dat <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!state %in% unique(dat[, 7])) {
stop("invalid state")
}
switch(outcome, `heart attack` = {
col = 11
}, `heart failure` = {
col = 17
}, pneumonia = {
col = 23
}, stop("invalid outcome"))
## Return hospital name in that state with lowest 30-day death rate
df = dat[dat$State == state, c(2, col)]
df[which.min(df[, 2]), 1]
}
best("TX", "heart attack")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
source("submitscript3.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
