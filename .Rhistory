x[x . 10] <- 4
x[x > 10] <- 4
x
hw1_data <- read.csv("~/Desktop/Coursera/hw1_data.csv")
View(hw1_data)
head(data, num=2L)
df[1:2]
print(dataset [1:2, ])
print(hw1_data [1:2, ])
nrow(hw1_data)
n <- nrow(hw1_data)
print(hw1_data [(n-6+1) :n, ])
> print(hw1_data [(n-2+1) :n, ])
print(hw1_data [(n-2+1) :n, ])
print(hw1_data [47, ])
miss <- is.na(dataset[, "Ozone"]
sum(miss)
miss <- is.na(hw1_data[, "Ozone"]
sum(miss)
miss <- is.na(hw1_data[, "Ozone"])
sum(miss)
mean("Ozone")
mean(hw1_data[, "Ozone"], na.rm = TRUE)
subset(hw1_data, Ozone > 31 & Temp > 90)
mean(subset[[Solar.R]])
mean(subset[["Solar.R"]])
mean(subset[, "Solar.R"])
subset(hw1_data, Ozone > 31 & Temp > 90)
mean(subset[, "Solar.R"])
mean(hw1_data [Temp, month == 6])
subset(hw1_data, Month == 5)
mean(temp, )
mean(, Temp)
mean([["Temp"]])
mean(df[["temp"]])
mean(df[["Temp"]])
newdata <- subset(hw1_data, month == 5)
newdata <- subset(hw1_data, Month == 5)
mean(newdata[[Temp]])
mean
mean(newdata[["Temp"]])
View(newdata)
View(newdata)
View(newdata)
newdata <- subset(hw1_data, Month == 6)
mean(newdata[["Temp"]])
newdata <- subset(hw1_data, month == 5)
newdata <- subset(hw1_data, Month == 5)
max(newdata[["Ozone"]])
max(newdata[["Ozone"]], na.rm = TRUE)
x <- list(2, "a", "b", TRUE)
x[[2]]
install.packages("KernSmooth")
library(KernSmooth)
cube <- function(x, n) {x^3}
cube(3)
x <- 1:10
if(x > 5) {
x <-0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 1:10
if(x > 5) {
x <- 0
}
pollutantmean <- (x, y, 1:332) {
x <- specdata
}
pollutantmean <- function(dirctory, pollutant, id = 1:332) {
directory <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(print(mean(data,na.rm=TRUE),digits=4))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(print(mean(data,na.rm=TRUE),digits=4))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE))
}
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE))
}
pollutantmean("specdata", "sulfate", 1:10)
return(mean(data,na.rm=TRUE,digits=4))
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE,digits=4))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
can
end
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE,digits=4))
}
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE,digits=4))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(mean(data,na.rm=TRUE), digits=4)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata, pollutant, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data=numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(print(mean(data,na.rm=TRUE),digits=4))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit(pollutantmean.r)
setwd(/Users/matthew_dorst/Desktop/Coursera)
subnit()
submit()
setwd(/Users/matthew_dorst/Desktop/Coursera)
getwd
getwd()
getwd()
setwd("/Users/matthew_dorst/Desktop/Coursera")
submit()
2
submit()
submit()
submit()
complete <- function(directory, id = 1:332) {
directory <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
nobs = numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
nobs=c(nobs,sum(complete.cases(newRead)))
}
return(data.frame(id,nobs))
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
directory <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
nobs = numeric()
for(i in id)
{newRead=read.csv(paste(complete,formatC(i,width=3,flag="0"),".csv",sep=""))
nobs=c(nobs,sum(complete.cases(newRead)))
}
return(data.frame(id,nobs))
}
complete("specdata", 1)
complete <- function(specdata, id = 1:332) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
nobs = numeric()
for(i in id)
{newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
nobs=c(nobs,sum(complete.cases(newRead)))
}
return(data.frame(id,nobs))
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
submit()
submit()
submit()
?corr
??corr
corr <- function(specdata, threshold = 0) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data = numeric()
for (i in ids) {
newRead = read.csv(paste(specdata, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(specdata, threshold = 0) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
data = numeric()
for (i in id) {
newRead = read.csv(paste(specdata, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(specdata, threshold = 0) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
df = complete(specdata)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(specdata, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(specdata, threshold = 0) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
df = complete(specdata)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(specdata, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return((corrr), digits = 5)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(specdata, threshold = 0) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
df = complete(specdata)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(specdata, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return((corrr),digits=5)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(specdata, threshold = 0) {
specdata <- "/Users/matthew_dorst/Desktop/Coursera/specdata/"
df = complete(specdata)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(specdata, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
cr <- corr("specdata", 150)
head(cr)
submit()
submit()
submit()
library(datasets)
data("iris")
?iris
iris
?iris
?iris
mean(x, y)
mean(iris$Sepal.Length [iris$Species=="virginica"],na.rm = TRUE)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data("mtcars")
?mtcars
mean(mtcars$mpg, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$hp, mtcars$cyl, mean)
debug(ls)
ls
getwd()
ls
ls
git push https://github.com/mattd1988/ProgrammingAssignment2.git
packages <- c("data.table", "reshape2")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
path <- getwd()
path
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
f <- "Dataset.zip"
if (!file.exists(path)) {dir.create(path)}
download.file(url, file.path(path, f))
executable <- file.path("C:", "Program Files (x86)", "7-Zip", "7z.exe")
parameters <- "x"
cmd <- paste(paste0("\"", executable, "\""), parameters, paste0("\"", file.path(path, f), "\""))
system(cmd)
pathIn <- file.path(path, "UCI HAR Dataset")
list.files(pathIn, recursive=TRUE)
dtSubjectTrain <- fread(file.path(pathIn, "train", "subject_train.txt"))
dtSubjectTest  <- fread(file.path(pathIn, "test" , "subject_test.txt" ))
dtActivityTrain <- fread(file.path(pathIn, "train", "Y_train.txt"))
dtActivityTest  <- fread(file.path(pathIn, "test" , "Y_test.txt" ))
fileToDataTable <- function (f) {
df <- read.table(f)
dt <- data.table(df)
}
dtTrain <- fileToDataTable(file.path(pathIn, "train", "X_train.txt"))
dtTest  <- fileToDataTable(file.path(pathIn, "test" , "X_test.txt" ))
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
setnames(dtSubject, "V1", "subject")
dtActivity <- rbind(dtActivityTrain, dtActivityTest)
setnames(dtActivity, "V1", "activityNum")
dt <- rbind(dtTrain, dtTest)
dtSubject <- cbind(dtSubject, dtActivity)
dt <- cbind(dtSubject, dt)
setkey(dt, subject, activityNum)
dtFeatures <- fread(file.path(pathIn, "features.txt"))
setnames(dtFeatures, names(dtFeatures), c("featureNum", "featureName"))
dtFeatures <- dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)]
dtFeatures$featureCode <- dtFeatures[, paste0("V", featureNum)]
head(dtFeatures)
dtFeatures$featureCode
select <- c(key(dt), dtFeatures$featureCode)
dt <- dt[, select, with=FALSE]
dtActivityNames <- fread(file.path(pathIn, "activity_labels.txt"))
setnames(dtActivityNames, names(dtActivityNames), c("activityNum", "activityName"))
dt <- merge(dt, dtActivityNames, by="activityNum", all.x=TRUE)
setkey(dt, subject, activityNum, activityName)
dt <- data.table(melt(dt, key(dt), variable.name="featureCode"))
dt <- merge(dt, dtFeatures[, list(featureNum, featureCode, featureName)], by="featureCode", all.x=TRUE)
dt$activity <- factor(dt$activityName)
dt$feature <- factor(dt$featureName)
grepthis <- function (regex) {
grepl(regex, dt$feature)
}
n <- 2
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("^t"), grepthis("^f")), ncol=nrow(y))
dt$featDomain <- factor(x %*% y, labels=c("Time", "Freq"))
x <- matrix(c(grepthis("Acc"), grepthis("Gyro")), ncol=nrow(y))
dt$featInstrument <- factor(x %*% y, labels=c("Accelerometer", "Gyroscope"))
x <- matrix(c(grepthis("BodyAcc"), grepthis("GravityAcc")), ncol=nrow(y))
dt$featAcceleration <- factor(x %*% y, labels=c(NA, "Body", "Gravity"))
x <- matrix(c(grepthis("mean()"), grepthis("std()")), ncol=nrow(y))
dt$featVariable <- factor(x %*% y, labels=c("Mean", "SD"))
dt$featJerk <- factor(grepthis("Jerk"), labels=c(NA, "Jerk"))
dt$featMagnitude <- factor(grepthis("Mag"), labels=c(NA, "Magnitude"))
n <- 3
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("-X"), grepthis("-Y"), grepthis("-Z")), ncol=nrow(y))
dt$featAxis <- factor(x %*% y, labels=c(NA, "X", "Y", "Z"))
r1 <- nrow(dt[, .N, by=c("feature")])
r2 <- nrow(dt[, .N, by=c("featDomain", "featAcceleration", "featInstrument", "featJerk", "featMagnitude", "featVariable", "featAxis")])
r1 == r2
setkey(dt, subject, activity, featDomain, featAcceleration, featInstrument, featJerk, featMagnitude, featVariable, featAxis)
dtTidy <- dt[, list(count = .N, average = mean(value)), by=key(dt)]
save(dtTidy.txt)
save(foo, dtTidy.txt)
write.table(dtTidy)
packages <- c("data.table", "reshape2")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
path <- getwd()
path
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
f <- "Dataset.zip"
if (!file.exists(path)) {dir.create(path)}
download.file(url, file.path(path, f))
executable <- file.path("C:", "Program Files (x86)", "7-Zip", "7z.exe")
parameters <- "x"
cmd <- paste(paste0("\"", executable, "\""), parameters, paste0("\"", file.path(path, f), "\""))
system(cmd)
pathIn <- file.path(path, "UCI HAR Dataset")
list.files(pathIn, recursive=TRUE)
dtSubjectTrain <- fread(file.path(pathIn, "train", "subject_train.txt"))
dtSubjectTest  <- fread(file.path(pathIn, "test" , "subject_test.txt" ))
dtActivityTrain <- fread(file.path(pathIn, "train", "Y_train.txt"))
dtActivityTest  <- fread(file.path(pathIn, "test" , "Y_test.txt" ))
fileToDataTable <- function (f) {
df <- read.table(f)
dt <- data.table(df)
}
dtTrain <- fileToDataTable(file.path(pathIn, "train", "X_train.txt"))
dtTest  <- fileToDataTable(file.path(pathIn, "test" , "X_test.txt" ))
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
setnames(dtSubject, "V1", "subject")
dtActivity <- rbind(dtActivityTrain, dtActivityTest)
setnames(dtActivity, "V1", "activityNum")
dt <- rbind(dtTrain, dtTest)
dtSubject <- cbind(dtSubject, dtActivity)
dt <- cbind(dtSubject, dt)
setkey(dt, subject, activityNum)
dtFeatures <- fread(file.path(pathIn, "features.txt"))
setnames(dtFeatures, names(dtFeatures), c("featureNum", "featureName"))
dtFeatures <- dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)]
dtFeatures$featureCode <- dtFeatures[, paste0("V", featureNum)]
head(dtFeatures)
dtFeatures$featureCode
select <- c(key(dt), dtFeatures$featureCode)
dt <- dt[, select, with=FALSE]
dtActivityNames <- fread(file.path(pathIn, "activity_labels.txt"))
setnames(dtActivityNames, names(dtActivityNames), c("activityNum", "activityName"))
dt <- merge(dt, dtActivityNames, by="activityNum", all.x=TRUE)
setkey(dt, subject, activityNum, activityName)
dt <- data.table(melt(dt, key(dt), variable.name="featureCode"))
dt <- merge(dt, dtFeatures[, list(featureNum, featureCode, featureName)], by="featureCode", all.x=TRUE)
dt$activity <- factor(dt$activityName)
dt$feature <- factor(dt$featureName)
grepthis <- function (regex) {
grepl(regex, dt$feature)
}
n <- 2
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("^t"), grepthis("^f")), ncol=nrow(y))
dt$featDomain <- factor(x %*% y, labels=c("Time", "Freq"))
x <- matrix(c(grepthis("Acc"), grepthis("Gyro")), ncol=nrow(y))
dt$featInstrument <- factor(x %*% y, labels=c("Accelerometer", "Gyroscope"))
x <- matrix(c(grepthis("BodyAcc"), grepthis("GravityAcc")), ncol=nrow(y))
dt$featAcceleration <- factor(x %*% y, labels=c(NA, "Body", "Gravity"))
x <- matrix(c(grepthis("mean()"), grepthis("std()")), ncol=nrow(y))
dt$featVariable <- factor(x %*% y, labels=c("Mean", "SD"))
dt$featJerk <- factor(grepthis("Jerk"), labels=c(NA, "Jerk"))
dt$featMagnitude <- factor(grepthis("Mag"), labels=c(NA, "Magnitude"))
n <- 3
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("-X"), grepthis("-Y"), grepthis("-Z")), ncol=nrow(y))
dt$featAxis <- factor(x %*% y, labels=c(NA, "X", "Y", "Z"))
r1 <- nrow(dt[, .N, by=c("feature")])
r2 <- nrow(dt[, .N, by=c("featDomain", "featAcceleration", "featInstrument", "featJerk", "featMagnitude", "featVariable", "featAxis")])
r1 == r2
setkey(dt, subject, activity, featDomain, featAcceleration, featInstrument, featJerk, featMagnitude, featVariable, featAxis)
dtTidy <- dt[, list(count = .N, average = mean(value)), by=key(dt)]
write.table(dtTidy, "c:/dttidy.txt", sep="\t")
write.table(dtTidy, "/Users/matthew_dorst/Desktop/Coursera/dttidy.txt", sep="\t")
